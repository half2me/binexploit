import time
import serial

'''
Data format is:
1. 1 byte: payload length (not counting chksum)
2. payload (first byte is some kind of identifier
3. 1 byte: chksum(payload)
'''

# Codes from the prog.img binary
hcode="\x63\x6F\x64\x65\x40\x00\x00\x00\x00\x00\x00\x00\xC8\x03\x00\x00"
hdata="\x64\x61\x74\x61\x08\x04\x00\x00\x00\x10\x00\x00\x44\x03\x00\x00"
hsign="\x73\x69\x67\x6E\x4C\x07\x00\x00\x00\x20\x00\x00\x40\x00\x00\x00"

def chksum( code ):
	eax = 0;
	for c in code:
		edx = ord(c)
		edx <<= 8
		eax ^= edx
		for x in range(0, 8):
			if eax & 0x8000:
				eax ^= 0x8380
			eax *= 2
	eax >>= 8
	return chr(eax)

def sendSerial( payload ):
    ser.write(chr(len(payload)) + payload + chksum(payload))

# ser = serial.Serial(port='COM4') # for Windows
# ser = serial.Serial(port='/dev/serial/by-id/usb-Arduino_LLC_Arduino_Due-if00') # for Linux
ser = serial.Serial(port='/dev/tty.usbmodem1a111') # for Mac

print "Hi: ",
sendSerial("\x00")
print ser.read(4) # Wait for ACK

# CODE HEADER
print "sending code header: ",
sendSerial("\x03" + hcode)
print ser.read(4) # Wait for ACK

# DATA HEADER
print "sending data header: ",
sendSerial("\x03" + hdata)
print ser.read(4) # Wait for ACK

# SIGN HEADER
print "sending sign header: ",
sendSerial("\x03" + hsign)
print ser.read(4) # Wait for ACK

# End
print "Bye: ",
sendSerial("\x02")
print ser.read(4) # Wait for ACK

ser.close()




exit()
